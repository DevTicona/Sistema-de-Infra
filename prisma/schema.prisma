generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model componentes {
  id                   Int          @id(map: "componente_pk") @default(autoincrement())
  id_sistema           Int
  nombre               String       @db.VarChar(30)
  descripcion          String
  estado               estado
  entorno              entorno
  categoria            categoria
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  sistemas             sistemas     @relation(fields: [id_sistema], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sistema_id")
  despliegue           despliegue[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model despliegue {
  id                   Int             @id(map: "despliegue_pk") @default(autoincrement())
  id_componente        Int?
  id_servidor          Int
  agrupador            String          @db.VarChar(15)
  nombre               String          @db.VarChar(50)
  tipo                 String          @db.VarChar(15)
  estado               estado
  fecha_creacion       DateTime        @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int             @map("_usuario_creacion")
  fecha_modificacion   DateTime?       @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?            @map("_usuario_modificacion")
  componentes          componentes?    @relation(fields: [id_componente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_componente_id")
  servidores           servidores      @relation(fields: [id_servidor], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_id")
  usuario_roles        usuario_roles[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model entidades {
  id                   Int        @id(map: "entidades_pk") @default(autoincrement())
  codigo               String     @db.VarChar(10)
  sigla                String     @db.VarChar(15)
  nombre               String     @db.VarChar(150)
  estado               estado
  fecha_creacion       DateTime   @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int        @map("_usuario_creacion")
  fecha_modificacion   DateTime?  @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?       @map("_usuario_modificacion")
  sistemas             sistemas[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model roles {
  id                   Int             @id(map: "roles_pk") @default(autoincrement())
  nombre               String          @db.VarChar(15)
  tipo                 String          @db.VarChar(15)
  estado               estado
  fecha_creacion       DateTime        @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int             @map("_usuario_creacion")
  fecha_modificacion   DateTime?       @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?            @map("_usuario_modificacion")
  privilegios          Json?           @db.Json
  usuario_roles        usuario_roles[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model servidores {
  id                   Int           @id(map: "servidor_pk") @default(autoincrement())
  nro_cluster          Int
  vmid                 Int
  nombre               String        @db.VarChar(35)
  nodo                 String        @db.VarChar(20)
  ip                   String        @db.Inet
  tipo                 String        @db.VarChar(15)
  estado               estado
  metadata             Json?
  fecha_creacion       DateTime      @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int           @map("_usuario_creacion")
  fecha_modificacion   DateTime?     @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?          @map("_usuario_modificacion")
  id_data_center       Int?
  despliegue           despliegue[]
  data_centers         data_centers? @relation(fields: [id_data_center], references: [id], map: "fk_servidores_data_center")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sistemas {
  id                   Int             @id(map: "sistema_pk") @default(autoincrement())
  id_padre             Int?
  id_entidad           Int
  codigo               String          @db.VarChar(20)
  sigla                String          @db.VarChar(25)
  nombre               String          @db.VarChar(100)
  descripcion          String
  estado               estado
  respaldo_creacion    Json?
  fecha_creacion       DateTime        @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int             @map("_usuario_creacion")
  fecha_modificacion   DateTime?       @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?            @map("_usuario_modificacion")
  componentes          componentes[]
  entidades            entidades       @relation(fields: [id_entidad], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_entidad_id")
  sistemas             sistemas?       @relation("sistemasTosistemas", fields: [id_padre], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sistema_padre_id")
  other_sistemas       sistemas[]      @relation("sistemasTosistemas")
  usuario_roles        usuario_roles[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model usuario_roles {
  id                   Int        @id(map: "usuario_roles_pk") @default(autoincrement())
  id_usuario           Int?
  id_rol               Int
  id_despliegue        Int
  id_sistema           Int
  estado               estado
  fecha_creacion       DateTime   @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int        @map("_usuario_creacion")
  fecha_modificacion   DateTime?  @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?       @map("_usuario_modificacion")
  despliegue           despliegue @relation(fields: [id_despliegue], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_despliegue_id")
  roles                roles      @relation(fields: [id_rol], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rol_id")
  sistemas             sistemas   @relation(fields: [id_sistema], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sistema_2_id")
  usuarios             usuarios?  @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model usuarios {
  id                   Int             @id(map: "usuario_pk") @default(autoincrement())
  uuid_ciudadano       String?         @db.VarChar
  nombre_usuario       String          @db.VarChar(20)
  profile              Json
  telefono             Json
  correo_electronico   Json
  estado               estado
  fecha_creacion       DateTime        @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int             @map("_usuario_creacion")
  fecha_modificacion   DateTime?       @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?            @map("_usuario_modificacion")
  usuario_roles        usuario_roles[]
}

model data_centers {
  id                   Int          @id(map: "data_centers_pk") @default(autoincrement())
  nombre               String       @db.VarChar(100)
  ubicacion            String?      @db.VarChar(200)
  capacidad            Int?
  estado               estado       @default(ACTIVO)
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  servidores           servidores[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model x_contenedor_logico {
  id                    Int                     @id(map: "contenedor_logico_pk") @default(autoincrement())
  codigo                String                  @db.VarChar(10)
  nombre                String                  @db.VarChar(50)
  descripcion           String
  tipo                  String                  @db.VarChar(15)
  estado                estado
  respaldo              Json?
  fecha_creacion        DateTime                @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion      Int                     @map("_usuario_creacion")
  fecha_modificacion    DateTime?               @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion  Int?                    @map("_usuario_modificacion")
  x_servidor_contenedor x_servidor_contenedor[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model x_servidor_contenedor {
  id                   Int                  @id(map: "servidor_contenedor_pk") @default(autoincrement())
  id_servidor          Int?
  id_contenedor_logico Int?
  sigla                String               @db.VarChar(15)
  nombre               String               @db.VarChar(50)
  descripcion          String
  tipo                 String               @db.VarChar(15)
  estado               estado
  respaldo             Json?
  fecha_creacion       DateTime             @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int                  @map("_usuario_creacion")
  fecha_modificacion   DateTime?            @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?                 @map("_usuario_modificacion")
  x_contenedor_logico  x_contenedor_logico? @relation(fields: [id_contenedor_logico], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_contenedor_logico_id")
}

enum categoria {
  Backend
  Frontend
  Database
  NFS
}

enum entorno {
  Demo
  PreProd
  Prod
  Test
}

enum estado {
  ACTIVO
  INACTIVO
}
