generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["autenticacion", "registro"]
}

model Role {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  user_rol UserRol[]

  @@map("rol")
  @@schema("autenticacion")
}

model User {
  id                  Int       @id @default(autoincrement())
  nombre              String?
  email               String    @unique
  hashedPassword      String    @default("")
  salt                String    @default("")
  resetToken          String?
  resetTokenExpiresAt DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime
  user_rol            UserRol[]

  @@map("user")
  @@schema("autenticacion")
}

model UserRol {
  id     Int  @id @default(autoincrement())
  userId Int
  roleId Int
  rol    Role @relation(fields: [roleId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@map("user_rol")
  @@schema("autenticacion")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Componente {
  id                   Int          @id(map: "componente_pk") @default(autoincrement())
  id_sistema           Int
  nombre               String       @db.VarChar(30)
  descripcion          String
  estado               estado
  entorno              entorno
  categoria            categoria
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  sistemas             Sistema      @relation(fields: [id_sistema], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sistema_id")
  despliegue           Despliegue[]

  @@map("componentes")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Despliegue {
  id                   Int          @id(map: "despliegue_pk") @default(autoincrement())
  id_componente        Int?
  id_servidor          Int
  agrupador            String       @db.VarChar(15)
  nombre               String       @db.VarChar(50)
  tipo                 String       @db.VarChar(15)
  estado               estado
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  componentes          Componente?  @relation(fields: [id_componente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_componente_id")
  servidores           Servidor     @relation(fields: [id_servidor], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_id")
  usuario_roles        Usuariorol[]

  @@map("despliegues")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Entidad {
  id                   Int       @id(map: "entidades_pk") @default(autoincrement())
  codigo               String    @db.VarChar(10)
  sigla                String    @db.VarChar(15)
  nombre               String    @db.VarChar(150)
  estado               estado
  fecha_creacion       DateTime  @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int       @map("_usuario_creacion")
  fecha_modificacion   DateTime? @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?      @map("_usuario_modificacion")
  sistemas             Sistema[]

  @@map("entidades")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Rol {
  id                   Int          @id(map: "roles_pk") @default(autoincrement())
  nombre               String       @db.VarChar(15)
  tipo                 String       @db.VarChar(15)
  estado               estado
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  privilegios          Json?        @db.Json
  usuario_roles        Usuariorol[]

  @@map("roles")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Servidor {
  id                   Int          @id(map: "servidor_pk") @default(autoincrement())
  nro_cluster          Int
  vmid                 Int
  nombre               String       @db.VarChar(35)
  nodo                 String       @db.VarChar(20)
  ip                   String       @db.Inet
  tipo                 String       @db.VarChar(15)
  estado               estado
  metadata             Json?
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  id_data_center       Int?
  despliegue           Despliegue[]
  data_centers         Datacenter?  @relation(fields: [id_data_center], references: [id], map: "fk_servidores_data_center")

  @@map("servidores")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Sistema {
  id                   Int          @id(map: "sistema_pk") @default(autoincrement())
  id_padre             Int?
  id_entidad           Int
  codigo               String       @db.VarChar(10)
  sigla                String       @db.VarChar(15)
  nombre               String       @db.VarChar(50)
  descripcion          String
  estado               estado
  respaldo_creacion    Json?
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  componentes          Componente[]
  entidades            Entidad      @relation(fields: [id_entidad], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_entidad_id")
  sistemas             Sistema?     @relation("sistemasTosistemas", fields: [id_padre], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sistema_padre_id")
  other_sistemas       Sistema[]    @relation("sistemasTosistemas")
  usuario_roles        Usuariorol[]

  @@map("sistemas")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Usuariorol {
  id                   Int        @id(map: "usuario_roles_pk") @default(autoincrement())
  id_usuario           Int?
  id_rol               Int
  id_despliegue        Int
  id_sistema           Int
  estado               estado
  fecha_creacion       DateTime   @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int        @map("_usuario_creacion")
  fecha_modificacion   DateTime?  @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?       @map("_usuario_modificacion")
  despliegue           Despliegue @relation(fields: [id_despliegue], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_despliegue_id")
  roles                Rol        @relation(fields: [id_rol], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rol_id")
  sistemas             Sistema    @relation(fields: [id_sistema], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sistema_2_id")
  usuarios             Usuario?   @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_id")

  @@map("usuario_roles")
  @@schema("registro")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Usuario {
  id                   Int          @id(map: "usuario_pk") @default(autoincrement())
  uuid_ciudadano       String?      @db.VarChar
  nombre_usuario       String       @db.VarChar(20)
  profile              Json
  telefono             Json
  correo_electronico   Json
  estado               estado
  fecha_creacion       DateTime     @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int          @map("_usuario_creacion")
  fecha_modificacion   DateTime?    @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?         @map("_usuario_modificacion")
  usuario_roles        Usuariorol[]

  @@map("usuarios")
  @@schema("registro")
}

model Datacenter {
  id                   Int        @id(map: "data_centers_pk") @default(autoincrement())
  nombre               String     @db.VarChar(100)
  ubicacion            String?    @db.VarChar(200)
  capacidad            Int?
  estado               estado     @default(ACTIVO)
  fecha_creacion       DateTime   @default(now()) @map("_fecha_creacion") @db.Timestamptz(6)
  usuario_creacion     Int        @map("_usuario_creacion")
  fecha_modificacion   DateTime?  @map("_fecha_modificacion") @db.Timestamptz(6)
  usuario_modificacion Int?       @map("_usuario_modificacion")
  servidores           Servidor[]

  @@map("data_centers")
  @@schema("registro")
}

enum categoria {
  Backend
  Frontend
  Database
  NFS

  @@map("categoria")
  @@schema("registro")
}

enum entorno {
  Demo
  PreProd
  Prod
  Test

  @@map("entorno")
  @@schema("registro")
}

enum estado {
  ACTIVO
  INACTIVO

  @@map("estado")
  @@schema("registro")
}
